library(readr)
samtools_stats <- read_csv("~/Dropbox (DaveLab)/VariantFiltering/remove_hardclipped_reads/samtools_stats.csv")
View(samtools_stats)
samtools_stats<-data.frame(samtools_stats[1:10,])
rownames(samtools_stats)<-samtools_stats[,1]
samtools_stats<-samtools_stats[,2:84]
library(Hmisc)
library(corrplot)
tmp<-rcorr(samtools_stats)
tmp<-cor(samtools_stats)
corrplot(tmp)
corrplot(tmp, method="circle", type="upper", order="hclust", tl.col="n")
corrplot(tmp, method="circle", type="upper", tl.col="n")
View(tmp)
plot(samtools_stats$filtered_indel_variants, samtools_stats$total_filtered_variants)
plot(samtools_stats$filtered_indel_variants, samtools_stats$total_filtered_variants, size=5)
plot(samtools_stats$filtered_indel_variants, samtools_stats$total_filtered_variants, type="p", col="green")
warnings()
plot(samtools_stats$filtered_indel_variants, samtools_stats$total_filtered_variants, col="blue")
plot(samtools_stats$filtered_indel_variants, samtools_stats$non.primary.alignments., col="blue")
plot(samtools_stats$filtered_indel_variants, samtools_stats$pairs.with.other.orientation., col="blue")
samtools_stats<-samtools_stats[,1:9]
library(readr)
samtools_stats <- read_csv("~/Dropbox (DaveLab)/VariantFiltering/remove_hardclipped_reads/samtools_stats.csv")
View(samtools_stats)
samtools_stats<-data.frame(samtools_stats[1:9,])
rownames(samtools_stats)<-samtools_stats[,1]
samtools_stats<-samtools_stats[,2:84]
tmp<-cor(samtools_stats)
View(tmp)
plot(samtools_stats$filtered_indel_variants, samtools_stats$pairs.with.other.orientation., col="blue")
plot(samtools_stats$filtered_indel_variants, samtools_stats$pct_other_orientation, col="blue")
library(readr)
common_indel_genes <- read_csv("~/Dropbox (DaveLab)/VariantFiltering/remove_hardclipped_reads/common_indel_genes.csv")
View(common_indel_genes)
colnames(common_indel_genes)[120]
colnames(common_indel_genes)[121]
colnames(common_indel_genes)[122]
colnames(common_indel_genes)[133]
colnames(common_indel_genes)[132]
samps<-common_indel_genes[,122:132]
samps<-cbind(samps[,8], samps)
samps<-common_indel_genes[,122:132]
samps<-cbind(common_indel_genes[,8], samps)
samps.agg<-aggregate(samps[,2:11], by=samps[,1], max)
samps.agg<-aggregate(samps[,2:11], by=list(samps[,1]), max)
View(samps.agg)
samps.agg$rowSum<-rowsSums(samps.agg[,2:12])
samps.agg$rowSum<-rowSum(samps.agg[,2:12])
samps.agg$rowSum<-rowsum(samps.agg[,2:12])
samps.agg<-aggregate(samps[,2:12], by=list(samps[,1]), max)
samps.agg$rowSum<-rowsum(samps.agg[,2:12])
samps.agg$rowsum<-apply(samps.agg, 1, sum)
samps.agg$rowsum<-apply(samps.agg[,2:12], 1, sum)
ggplot(samps.agg, aes(y=rowsum, x=Group.1))+geom_bar(identity="stat")
ggplot(samps.agg, aes(y=rowsum, x=Group.1))+geom_bar(stat="identity")
ggplot(samps.agg[samps.agg$rowsum>8,], aes(y=rowsum, x=Group.1))+geom_bar(stat="identity")
ggplot(samps.agg[samps.agg$rowsum>7,], aes(y=rowsum, x=Group.1))+geom_bar(stat="identity")
table(samps.agg$rowsum)
ggplot(samps.agg[samps.agg$rowsum>7,], aes(y=rowsum, x=Group.1))+geom_bar(stat="identity")+theme(axis.text.x=element_text(angle=90))
samps.agg<-samps.agg[order(samps.agg$rowsum)]
samps.agg<-samps.agg[order(samps.agg$rowsum),]
ggplot(samps.agg[samps.agg$rowsum>7,], aes(y=rowsum, x=Group.1))+geom_bar(stat="identity")+theme(axis.text.x=element_text(angle=90))
samps.agg$Group.1<-as.factor(samps.agg$Group.1)
ggplot(samps.agg[samps.agg$rowsum>7,], aes(y=rowsum, x=Group.1))+geom_bar(stat="identity")+theme(axis.text.x=element_text(angle=90))
samps.agg$Group.1<-as.factor(samps.agg$Group.1, levels=samps.agg$Group.1)
samps.agg$Group.1<-factor(samps.agg$Group.1, levels=samps.agg$Group.1)
ggplot(samps.agg[samps.agg$rowsum>7,], aes(y=rowsum, x=Group.1))+geom_bar(stat="identity")+theme(axis.text.x=element_text(angle=90))
ggplot(samps.agg, aes(y=rowsum, x=Group.1))+geom_bar(stat="identity")+theme(axis.text.x=element_text(angle=90))
ggplot(samps.agg[samps.agg$rowsum>0,], aes(y=rowsum, x=Group.1))+geom_bar(stat="identity")+theme(axis.text.x=element_text(angle=90))
ggplot(samps.agg[samps.agg$rowsum>2,], aes(y=rowsum, x=Group.1))+geom_bar(stat="identity")+theme(axis.text.x=element_text(angle=90))
ggplot(samps.agg[samps.agg$rowsum>4,], aes(y=rowsum, x=Group.1))+geom_bar(stat="identity")+theme(axis.text.x=element_text(angle=90))
View(samtools_stats)
setwd("~/Dropbox (DaveLab)/Lanie_resources/variantFilter")
load("~/Dropbox (DaveLab)/Lanie_resources/variantFilter/filtered_whitelist_08032020.RData")
View(wl)
get_whitelist_vars_dna<-function(dna_bam){
whitelist_path<-"filtered_whitelist_08032020.txt"
comm<-paste0('samtools mpileup -a -l ', whitelist_path, ' --fasta-ref ',ref, ' ', dna_bam, ' -o dna_whitelist.txt' )
system(comm)
dna_whitelist<-read.csv(file="dna_whitelist.txt", sep="\t", stringsAsFactors = FALSE, header=FALSE)
colnames(dna_whitelist)<-c("Chr", "Pos", "Ref", "Depth", "mpileup", "Qual")
dna_whitelist$ref_FS<-str_count(dna_whitelist$mpileup, pattern="[.]")
dna_whitelist$ref_RS<-str_count(dna_whitelist$mpileup, pattern=",")
dna_whitelist$A_FS<-str_count(dna_whitelist$mpileup, pattern="A")
dna_whitelist$A_RS<-str_count(dna_whitelist$mpileup, pattern="a")
dna_whitelist$C_FS<-str_count(dna_whitelist$mpileup, pattern="C")
dna_whitelist$C_RS<-str_count(dna_whitelist$mpileup, pattern="c")
dna_whitelist$G_FS<-str_count(dna_whitelist$mpileup, pattern="G")
dna_whitelist$G_RS<-str_count(dna_whitelist$mpileup, pattern="g")
dna_whitelist$T_FS<-str_count(dna_whitelist$mpileup, pattern="T")
dna_whitelist$T_RS<-str_count(dna_whitelist$mpileup, pattern="t")
dna_whitelist$DEL<-str_count(dna_whitelist$mpileup, pattern="[*]")
dna_whitelist$INS<-str_count(dna_whitelist$mpileup, pattern="[+]")
dna_whitelist$A_evidence<-dna_whitelist$A_FS>0 & dna_whitelist$A_RS>0
dna_whitelist$C_evidence<-dna_whitelist$C_FS>0 & dna_whitelist$C_RS>0
dna_whitelist$T_evidence<-dna_whitelist$T_FS>0 & dna_whitelist$T_RS>0
dna_whitelist$G_evidence<-dna_whitelist$G_FS>0 & dna_whitelist$G_RS>0
tmp<-dna_whitelist[dna_whitelist$A_evidence,]
tmp$Alt_depth<-tmp$A_FS+tmp$A_RS
tmp$AF<-tmp$Alt_depth/tmp$Depth
vars<-cbind(tmp$Chr, tmp$Pos, tmp$Ref, rep("A", nrow(tmp)), tmp$Depth, tmp$Alt_depth, tmp$AF)
tmp<-dna_whitelist[dna_whitelist$C_evidence,]
tmp$Alt_depth<-tmp$C_FS+tmp$C_RS
tmp$AF<-tmp$Alt_depth/tmp$Depth
vars<-rbind(vars, cbind(tmp$Chr, tmp$Pos, tmp$Ref, rep("C", nrow(tmp)), tmp$Depth, tmp$Alt_depth, tmp$AF))
tmp<-dna_whitelist[dna_whitelist$T_evidence,]
tmp$Alt_depth<-tmp$T_FS+tmp$T_RS
tmp$AF<-tmp$Alt_depth/tmp$Depth
vars<-rbind(vars, cbind(tmp$Chr, tmp$Pos, tmp$Ref, rep("T", nrow(tmp)), tmp$Depth, tmp$Alt_depth, tmp$AF))
tmp<-dna_whitelist[dna_whitelist$G_evidence,]
tmp$Alt_depth<-tmp$G_FS+tmp$G_RS
tmp$AF<-tmp$Alt_depth/tmp$Depth
vars<-data.frame(rbind(vars, cbind(tmp$Chr, tmp$Pos, tmp$Ref, rep("G", nrow(tmp)), tmp$Depth, tmp$Alt_depth, tmp$AF)))
colnames(vars)<-c("Chr", "Pos", "Ref", "Alt", "DNA_depth_total", "DNA_depth_alt", "DNA_AF")
vars$CHROM_POS_REF_ALT<-paste(vars$Chr, vars$Pos, vars$Ref, vars$Alt, sep="-")
return(vars)
}
